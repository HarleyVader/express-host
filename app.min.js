async function addTodb(e=views,o=[]){try{const s=fs.readdirSync(e).filter(o=>filter(o,e));for(let t of s){const s=path.join(e,t);if(fs.statSync(s).isDirectory()){if(e!==views){let e=s.replace(/^views\//,"");e=e.startsWith("/")?e:"/"+e;const t=await db.collection("views").findOne({key:e});t||(await db.collection("views").insertOne({key:e,count:0}),o.push(e))}await addTodb(s,o)}}}catch(e){console.error("Error in addTodb:",e)}return o}const express=require("express"),fs=require("fs"),path=require("path"),MongoClient=require("mongodb").MongoClient,PORT=7777,views="./",excludedir=["assets","node_modules","vidViews",".git"];let db;MongoClient.connect("mongodb://localhost:27017",{useUnifiedTopology:!0},(e,o)=>{if(e)throw e;db=o.db("vidViews")});const filter=(e,o=views)=>{const s=path.resolve(o)+"/"+e;return!(excludedir.includes(e)||!fs.existsSync(s))&&!!fs.statSync(s).isDirectory()},app=express();app.set("view engine","ejs"),app.get("/sync",async(e,o)=>{await addTodb(),o.redirect("/list")}),app.get("/list",async(e,o)=>{let s=await db.collection("views").find().toArray();o.render("list",{folders:s})}),app.get("/:folderName/:subfolderName?",async(e,o)=>{const{folderName:s,subfolderName:t}=e.params;let i=`/${s}/${t||""}`,n=path.join(views,i);const r=fs.existsSync(path.join(n,"index.ejs")),a=await db.collection("views").find().toArray();console.log("folderName: ",s,"subfolderName: ",t,"folderPath: ",i,"includeFile: ",r),o.render("index",{folders:a,folderPath:i,includeFile:r})}),app.post("/incrementViewCount",async(e,o)=>{const s=e.body.key,t=(e.body.value,await db.collection("views").findOneAndUpdate({key:s},{$inc:{count:1}},{returnOriginal:!1}));console.log(t.value.count),o.json({folderName:s,getViewCount:t.value.count})}),app.use((e,o,s,t)=>{console.error(e.stack),s.status(500).send("Something broke!")}),app.listen(PORT,()=>{console.log(`Server started on port ${PORT}`)}),process.on("SIGINT",()=>{db.close(),process.exit()});